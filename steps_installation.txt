## Ejecutar los siguientes comandos en el temrinal
sudo apt install build-essential cmake git pkg-config libgtk-3-dev \
    libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
    gfortran openexr libatlas-base-dev python3-dev python3-numpy \
    libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev \
    libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev

## Instalar otras dependecias posiblemente no necesarias
sudo apt-get install build-essential checkinstall cmake pkg-config yasm
sudo apt-get install git gfortran
sudo apt-get install libjpeg8-dev libjasper-dev libpng12-dev
sudo apt-get install libtiff5-dev
sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libdc1394-22-dev
sudo apt-get install libxine2-dev libv4l-dev
sudo apt-get install libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev
sudo apt-get install qt5-default libgtk2.0-dev libtbb-dev
sudo apt-get install libatlas-base-dev
sudo apt-get install libfaac-dev libmp3lame-dev libtheora-dev
sudo apt-get install libvorbis-dev libxvidcore-dev
sudo apt-get install libopencore-amrnb-dev libopencore-amrwb-dev
sudo apt-get install x264 v4l-utils
sudo apt-get install libprotobuf-dev protobuf-compiler
sudo apt-get install libgoogle-glog-dev libgflags-dev
sudo apt-get install libgphoto2-dev libeigen3-dev libhdf5-dev doxygen
sudo -H pip3 install -U pip numpy

## Creacion ambiente virtual para  python3
sudo pip3 install virtualenv virtualenvwrapper

## Agregar las sigueintes lineas en ~/.bashrc
export WORKON_HOME=/home/fer/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
source /usr/local/bin/virtualenvwrapper.sh

## creamos e ambiente virtual llamado facecourse-py3
mkvirtualenv facecourse-py3 -p python3
## accesdemos al ambiente virtual
workon facecourse-py3
## Installamoslas suguientes dependencias para poder usar opencv en el abiente virtual
pip install numpy scipy matplotlib scikit-image scikit-learn ipython
## Salimos del ambiente virtual
deactivate


## crear la carpeta respectiva para copilar los paquetes de Opencv
mkdir ~/opencv_build && cd ~/opencv_build

## Clonar los paquetes respectivos en la carpeta selecionada
git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git

## Un vez que se descarga los paquetes se crea el directorio donde se va a copilar
cd ~/opencv_build/opencv

## se crea el directorio del sistema
mkdir -p build && cd build

## Se genera la configuracion deseada para el cmake
cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D INSTALL_C_EXAMPLES=ON \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D OPENCV_GENERATE_PKGCONFIG=ON \
    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
    -D BUILD_EXAMPLES=ON ..

## Se inicia el proceso de copilacion de open cv
make -j8

## Se installa los paquetes para todo el sistema operativo
sudo make install
sudo sh -c 'echo "/usr/local/lib" >> /etc/ld.so.conf.d/opencv.conf'
sudo ldconfig

## Verificamos la version open cv
pkg-config --modversion opencv4

## EL siguiente paso el linkear con el respectivo ambiente virtual de python
## Buscamos la ubicacion del paquete instalado
find /usr/local/lib/ -type f -name "cv2*.so"

## La salida debe ser algo muy parecido a esto
/usr/local/lib/python3.8/site-packages/cv2/python-3.8/cv2.cpython-38-x86_64-linux-gnu.so
## Esta direccion se debe verificar muy bien antes del siguiente paso
## en el siguiente paso se debe verificar la version de python que este intalada
## En el caso de este computador es el siguiente path
cd ~/.virtualenvs/facecourse-py3/lib/python3.8/site-packages

## se genera el enlace 
ln -s /usr/local/lib/python3.8/site-packages/cv2/python-3.8/cv2.cpython-38-x86_64-linux-gnu.so cv2.so




